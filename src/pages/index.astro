---
import Layout from "@/layouts/Layout.astro";
import NavBar from "@/components/NavBar.astro";
import Header from "@/components/Header.astro";
import PostPreview from "@/components/PostPreview.astro";
import { getCollection } from "astro:content";
import { SITE } from "@/config";
import "@/styles/sneaky.css";

const posts = await getCollection("blog");
const sortedPosts = posts.sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

const schema = {
  "@context": "https://schema.org",
  "@type": "Blog",
  name: SITE.title,
  description: SITE.description,
  url: "https://sneakyfoxy.com/", // замените на актуальный URL
  author: {
    "@type": "Person",
    name: "SneakyFoxy",
  },
  blogPost: sortedPosts.map((post) => ({
    "@type": "BlogPosting",
    headline: post.data.title,
    description: post.data.description,
    datePublished:
      post.data.date.toISOString?.() ?? new Date(post.data.date).toISOString(),
    url: `https://sneakyfoxy.com/${post.id}`, // замените путь при необходимости
    keywords: post.data.tags?.join(", "),
  })),
};
---

<Layout
  title={SITE.title}
  description={SITE.description}
  schema={schema}
>
  <main>
    <NavBar />
    <Header
      title="Blog"
      subtitle="Technical writeups, research findings, and interesting problems I encounter."
    />

    <div class="posts-list">
      {
        sortedPosts.map((post) => (
          <PostPreview
            title={post.data.title}
            date={post.data.date}
            id={post.id}
            description={post.data.description}
            tags={post.data.tags}
          />
        ))
      }
    </div>

    {
      sortedPosts.length === 0 && (
        <div class="empty-state">
          <p>No posts yet, but some interesting writeups are coming soon...</p>
        </div>
      )
    }
  </main>
</Layout>
